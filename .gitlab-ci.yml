image: docker:stable

services:
  - docker:dind

variables:
  AWS_REGION: ${AWS_DEFAULT_REGION}
  ECR_REPOSITORY: 'p5gsi-offshore'
  IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
  DOCKER_IMAGE: '$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG'
  CONTAINER_NAME: 'saas'
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''

stages:
  - build_and_push

before_script:
  - apk add --no-cache py-pip curl
  - pip install awscli
  - aws sts get-caller-identity
  - curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  - chmod +x /usr/local/bin/docker-compose
  - export PATH=$PATH:/usr/local/bin
  - docker-compose --version

build-and-push-job:
  stage: build_and_push
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  script:
    - echo "Logging into Amazon ECR..."
    - aws --version
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - echo "Building Docker image..."
    - docker-compose build app
    - docker tag $CONTAINER_NAME ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY/$CONTAINER_NAME:${IMAGE_TAG}
    - echo "Pushing Docker image to ECR..."
    - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY/$CONTAINER_NAME:${IMAGE_TAG}
  environment:
    name: production
